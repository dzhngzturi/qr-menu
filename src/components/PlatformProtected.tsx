// src/components/PlatformProtected.tsx
import { Navigate, useLocation } from "react-router-dom";
import { useAuth } from "../context/AuthContext";

export default function PlatformProtected({ children }: { children: React.ReactNode }) {
  const { token, isAdmin, restaurant, loading } = useAuth(); // üëà –≤–∑–∏–º–∞–º–µ restaurant –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const loc = useLocation();

  // 1) –∏–∑—á–∞–∫–∞–π bootstrap (/auth/me)
  if (loading) {
    return <div className="min-h-screen grid place-items-center text-gray-600">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ‚Ä¶</div>;
  }

  // 2) –±–µ–∑ —Ç–æ–∫–µ–Ω ‚Üí –∫—ä–º login
  if (!token) {
    return <Navigate to="/login" replace state={{ from: loc }} />;
  }

  // 3) –Ω–µ –µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω ‚Üí –ø—Ä–∞—Ç–∏ –≥–æ –∫—ä–º –Ω–µ–≥–æ–≤–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω—Ç (–ù–ï –æ—Ç URL)
  if (!isAdmin) {
    const slug =
      restaurant?.slug ||                         // üîπ –æ—Å–Ω–æ–≤–Ω–∏—è—Ç –∏–∑—Ç–æ—á–Ω–∏–∫
      localStorage.getItem("restaurant_slug") ||   // üîπ —Ä–µ–∑–µ—Ä–≤–Ω–æ (–∑–∞ refresh)
      localStorage.getItem("restaurant") || "";    //   legacy –∫–ª—é—á

    return slug
      ? <Navigate to={`/admin/r/${slug}/categories`} replace />
      : <Navigate to="/login" replace />; // –Ω—è–º–∞ –∞—Å–æ—Ü–∏–∏—Ä–∞–Ω —Ä–µ—Å—Ç–æ—Ä–∞–Ω—Ç ‚Üí –±–µ–∑–æ–ø–∞—Å–µ–Ω fallback
  }

  // 4) —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω ‚Üí –ø—É—Å–∫–∞–º–µ –∫—ä–º –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ç–∞
  return <>{children}</>;
}
